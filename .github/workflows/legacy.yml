name: (GCC)Kernel Builder Xiaomi MI 10

on: 
  push:
  schedule:
    - cron: '0 1 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout zipper
      uses: actions/checkout@v2
      with:
        repository: lemniskett/AnyKernel3
        path: zipper
    - name: Integrate KernelSU
      run: |
        
        

        sudo apt update && sudo apt upgrade
        sudo apt install -y git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc unzip bc      

        git clone https://github.com/CoolestEnoch/xiaomi-10-ultra-kernel
        git clone https://github.com/yarpiin/White-Wolf-UMI-UNI
        mv xiaomi-10-ultra-kernel source
        mv White-Wolf-UMI-UNI source2
        
        sudo cp /source/libdebuginfod.so.1 /source2/usr/lib
        
        sudo chmod 777 /source2/usr/lib/libdebuginfod.so.1
        
        cd source2
      
        echo "[+] Append kernel params to kprobes"
        echo "CONFIG_KPROBES=y" >> arch/arm64/configs/vendor/umi_defconfig
        echo "CONFIG_HAVE_KPROBES=y" >> arch/arm64/configs/vendor/umi_defconfig
        echo "CONFIG_KPROBE_EVENTS=y" >> arch/arm64/configs/vendor/umi_defconfig

        git clone https://github.com/tiann/KernelSU
        cd KernelSU
        git stash && git pull
        cd ..
        cp -r KernelSU/kernel drivers/kernelsu

        echo "[+] Add kernel su driver to Makefile"

        echo "obj-y += kernelsu/" >> drivers/Makefile
        
        echo "ccflags-y += -std=gnu11" >> drivers/kernelsu/Makefile

        echo "[+] Done."
        
        cd ..
        
        git clone https://github.com/CoolestEnoch/kernel-su-xiaomi-cas
        
        mv kernel-su-xiaomi-cas/gcc/ ./gcc
        rm -rf kernel-su-xiaomi-cas
        
        
        export ARCH=arm64
        export CROSS_COMPILE=$(pwd)/gcc/gcc-arm64-gcc-master/bin/aarch64-elf-
        export CROSS_COMPILE_ARM32=$(pwd)/gcc/gcc-arm-gcc-master/bin/arm-eabi-
        
        cd source2
        make umi_defconfig
        make -j$(nproc --all)
        

    - name: Upload Build
      uses: actions/upload-artifact@v3
      with:
        name: Image
        path: /home/runner/work/kernelsu-xiaomi-cas-online/kernelsu-xiaomi-cas-online/source/arch/arm64/boot/Image
